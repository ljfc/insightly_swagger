=begin
Insightly API v2.2

OpenAPI spec version: v2.2

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CustomFieldsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CustomFieldsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CustomFieldsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomFieldsApi' do
    it 'should create an instact of CustomFieldsApi' do
      @instance.should be_a(SwaggerClient::CustomFieldsApi)
    end
  end

  # unit tests for get_custom_fields
  # Gets a list of Custom Fields
  # Use this API call to get a list of custom fields metadata. The properties FIELD_FOR, GROUP_ID, and ORDER_ID can be used to determine which fields belong to a particular object. See CustomFieldGroups if more data on a custom field&#39;s group is needed. A common problem API users have is to reference an invalid CUSTOM_FIELD_ID when referencing custom fields in a newly created or updated object.            If you plan to use custom fields in your API based application, be sure you are working with valid custom field IDs. To add or update custom fields for your Insightly instance, you&#39;ll need to go to the web app to do so.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip Optional, number of custom fields to skip.
  # @option opts [Integer] :top Optional, maximum number of custom fields to return in the response.
  # @option opts [BOOLEAN] :count_total Optional, true if total number of records should be returned in the response headers.
  # @return [Array<InlineResponse20016>]
  describe 'get_custom_fields test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
