=begin
Insightly API v2.2

OpenAPI spec version: v2.2

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PipelineStagesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PipelineStagesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PipelineStagesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PipelineStagesApi' do
    it 'should create an instact of PipelineStagesApi' do
      @instance.should be_a(SwaggerClient::PipelineStagesApi)
    end
  end

  # unit tests for get_pipeline_stage
  # Gets a Pipeline Stage
  # This endpoint returns the graph for a specific pipeline stage.
  # @param id A Pipeline Stage&#39;s ID
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20031]
  describe 'get_pipeline_stage test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for get_pipeline_stages
  # Gets a list of Pipeline Stages
  # This read only endpoint returns a list of the pipeline stages that have been set up for the Insightly instance.            Pipeline stages are used to indicate where a project or opportunity is in terms of its progression.            For example, stage 1 for the sales pipeline might be \&quot;initial contact\&quot;, while stage 4 might be \&quot;generating quote\&quot;.            The API for pipeline stages is read only, so to create or update pipeline stages, you&#39;ll need to use the web app to do so.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip Optional, number of stages to skip.
  # @option opts [Integer] :top Optional, maximum number of stages to return in the response.
  # @option opts [BOOLEAN] :count_total Optional, true if total number of records should be returned in the response headers.
  # @return [Array<InlineResponse20031>]
  describe 'get_pipeline_stages test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
