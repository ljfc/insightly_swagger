=begin
Insightly API v2.2

OpenAPI spec version: v2.2

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::TeamsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TeamsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::TeamsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TeamsApi' do
    it 'should create an instact of TeamsApi' do
      @instance.should be_a(SwaggerClient::TeamsApi)
    end
  end

  # unit tests for add_team
  # Adds a Team
  # 
  # @param api_team The Team to add (just include JSON object as request body)
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20036]
  describe 'add_team test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for add_team_member
  # Adds a Team Member
  # 
  # @param id A Team&#39;s ID (TEAM_ID)
  # @param api_team_member The Team Member to add (just include JSON object as request body)
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20035]
  describe 'add_team_member test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for delete_team
  # Deletes a Team
  # 
  # @param id A Team&#39;s ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_team test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for delete_team_member
  # Deletes a Team Member
  # 
  # @param id A Team&#39;s ID (TEAM_ID)
  # @param permission_id A Team Members&#39;s ID (PERMISSION_ID)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_team_member test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for get_team
  # Gets a Team
  # 
  # @param id A Team&#39;s ID
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20036]
  describe 'get_team test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for get_teams
  # Gets a list of Teams.
  # Simple object graphs (excluding TEAMMEMBERS) are returned if \&quot;brief=true\&quot; is used in the query string.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :brief Optional, true if response should only contain top level properties of the team.
  # @option opts [Integer] :skip Optional, number of teams to skip.
  # @option opts [Integer] :top Optional, maximum number of teams to return in the response.
  # @option opts [BOOLEAN] :count_total Optional, true if total number of records should be returned in the response headers.
  # @return [Array<InlineResponse20036>]
  describe 'get_teams test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for get_teams_by_search
  # Gets a filtered list of Teams.
  # Only one optional parameter (excluding brief, top, skip and count_total) can be specified. Simple object graphs (excluding TEAMMEMBERS) are returned if \&quot;brief=true\&quot; is used in the query string.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :team_name Optional, name of the team.
  # @option opts [DateTime] :updated_after_utc Optional, earliest date when team was last updated.
  # @option opts [BOOLEAN] :brief Optional, true if response should only contain top level properties of the team.
  # @option opts [Integer] :skip Optional, number of teams to skip.
  # @option opts [Integer] :top Optional, maximum number of teams to return in the response.
  # @option opts [BOOLEAN] :count_total Optional, true if total number of records should be returned in the response headers.
  # @return [Array<InlineResponse20036>]
  describe 'get_teams_by_search test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for update_team
  # Updates a Team
  # 
  # @param api_team The Team to update (just include JSON object as request body)
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :brief Optional, true if you wish to do a partial update containing only top level properties of the Team. When true, all sub-collections are ignored.
  # @return [InlineResponse20036]
  describe 'update_team test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for update_team_member
  # Updates a Team Member
  # 
  # @param id A Team&#39;s ID (TEAM_ID)
  # @param api_team_member The Team Member to update (just include JSON object as request body)
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20035]
  describe 'update_team_member test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
